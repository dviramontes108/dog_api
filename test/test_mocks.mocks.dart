// Mocks generated by Mockito 5.4.4 from annotations
// in doc_ceo_api/test/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:doc_ceo_api/model/dog.dart' as _i3;
import 'package:doc_ceo_api/repository/dogs_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDogsUrlList_0 extends _i1.SmartFake implements _i2.DogsUrlList {
  _FakeDogsUrlList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDog_1 extends _i1.SmartFake implements _i3.Dog {
  _FakeDog_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DogsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDogsRepository extends _i1.Mock implements _i2.DogsRepository {
  @override
  _i2.DogsUrlList get dogsUrlList => (super.noSuchMethod(
        Invocation.getter(#dogsUrlList),
        returnValue: _FakeDogsUrlList_0(
          this,
          Invocation.getter(#dogsUrlList),
        ),
        returnValueForMissingStub: _FakeDogsUrlList_0(
          this,
          Invocation.getter(#dogsUrlList),
        ),
      ) as _i2.DogsUrlList);

  @override
  set dogsUrlList(_i2.DogsUrlList? _dogsUrlList) => super.noSuchMethod(
        Invocation.setter(
          #dogsUrlList,
          _dogsUrlList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i3.Dog>> getAllDogs() => (super.noSuchMethod(
        Invocation.method(
          #getAllDogs,
          [],
        ),
        returnValue: _i4.Future<List<_i3.Dog>>.value(<_i3.Dog>[]),
        returnValueForMissingStub: _i4.Future<List<_i3.Dog>>.value(<_i3.Dog>[]),
      ) as _i4.Future<List<_i3.Dog>>);

  @override
  _i4.Future<_i3.Dog> getDogDetail({required _i3.Dog? dog}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDogDetail,
          [],
          {#dog: dog},
        ),
        returnValue: _i4.Future<_i3.Dog>.value(_FakeDog_1(
          this,
          Invocation.method(
            #getDogDetail,
            [],
            {#dog: dog},
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i3.Dog>.value(_FakeDog_1(
          this,
          Invocation.method(
            #getDogDetail,
            [],
            {#dog: dog},
          ),
        )),
      ) as _i4.Future<_i3.Dog>);
}
